Задание 1
def metrics(user1, user2)- расчет метрики
def avg_value(user)- среднее значение оценки пользователем фильмов
def stars(f)- предпологаемая оценка для фильма

1.Читаем данные из файла data.cvs в DataFrame с помощью библиотеки pandas 
1.Расчитываем коэфициент похожести всех пользователей на заданного пользователя
(метрика косинуса)
 a. Расчет схожести пользователей ведется, только если оба пользователя смотрели данный фильм фильм
2.Находим топ5 пользователей, которые наиболее похожи на нашего пользователя 
(просто сортируем словарь по убыванию метрик и берем первые 5 записей)
3.Для пользователя, расчитываем предполагаемую оценку для тех фильмов, которые он не смотрел, 
по следующим правилам:
 a.Если пользователь смотрел фильм, то его оценка учитывается
 б.Используем формулу
4.Получаем предполагаемые оценки для трех фильмов, которые пользователь номер 32 еще не оценил

Задание 2
Все выщеперечисленные пункты сохраняют свою силу,но
1.+ context.csv (данные по контексту аналогично считываются)
2.Изменяем информацию, полученную из data.cvs, относительно данных полученных из файла context.csv
 а. Ситуация,когда пользователь смотрел фильм в субботу или воскресенье для 
нас аналогична ситуации, что пользователь вообще не смотрел этот фильм (эти оценки мы все ровно не учитываем)
 б.Изменяем оценки для фильмов, просмотренных в выходные дни на -1
Таким образом получаем таблицу с оцененными фильмами в будние дни

Расчитываем коэфициент похожести пользователей в будний день, и повтроям пункты 2-4 из задания 1
Теперь выбираем фильм с лучщей оценкой

